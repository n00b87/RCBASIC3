# Makefile.in generated by automake 1.6.3 from Makefile.am.
# lib/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/bash

srcdir = .
top_srcdir = ..

prefix = /home/n00b/Desktop/projects/libtheora-1.1.1/out
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/share/info
mandir = ${prefix}/share/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/libtheora
pkglibdir = $(libdir)/libtheora
pkgincludedir = $(includedir)/libtheora
top_builddir = ..

ACLOCAL = ${SHELL} /home/n00b/Desktop/projects/libtheora-1.1.1/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /home/n00b/Desktop/projects/libtheora-1.1.1/missing --run autoconf
AUTOMAKE = ${SHELL} /home/n00b/Desktop/projects/libtheora-1.1.1/missing --run automake-1.6
AUTOHEADER = ${SHELL} /home/n00b/Desktop/projects/libtheora-1.1.1/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = x86_64-unknown-linux-gnu

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
ACLOCAL_AMFLAGS = -I m4
AMTAR = ${SHELL} /home/n00b/Desktop/projects/libtheora-1.1.1/missing --run tar
AR = /home/n00b/Programs/emsdk/upstream/emscripten/emar
ARGZ_H = @ARGZ_H@
AS = as
AWK = mawk
BUILDABLE_EXAMPLES = 
CAIRO_CFLAGS = 
CAIRO_LIBS = 
CC = /home/n00b/Programs/emsdk/upstream/emscripten/emcc
CPP = /home/n00b/Programs/emsdk/upstream/emscripten/emcc -E
CXX = @CXX@
CXXCPP = @CXXCPP@
DEBUG = -g -Wall -Wno-parentheses -DDEBUG -D__NO_MATH_INLINES
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GETOPT_OBJS = 
GREP = /usr/bin/grep
HAVE_BIBTEX = 
HAVE_DOXYGEN = false
HAVE_PDFLATEX = 
HAVE_PKG_CONFIG = yes
HAVE_TRANSFIG = 
HAVE_VALGRIND = 
INCLTDL = @INCLTDL@
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LD = /home/n00b/Programs/emsdk/upstream/emscripten/emcc
LIBADD_DL = @LIBADD_DL@
LIBADD_DLD_LINK = @LIBADD_DLD_LINK@
LIBADD_DLOPEN = @LIBADD_DLOPEN@
LIBADD_SHL_LOAD = @LIBADD_SHL_LOAD@
LIBLTDL = @LIBLTDL@
LIBM = @LIBM@
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTDLDEPS = @LTDLDEPS@
LTDLINCL = @LTDLINCL@
LTDLOPEN = @LTDLOPEN@
LT_CONFIG_H = @LT_CONFIG_H@
LT_DLLOADERS = @LT_DLLOADERS@
LT_DLPREOPEN = @LT_DLPREOPEN@
MAINT = #
NM = /home/n00b/Programs/emsdk/upstream/bin/llvm-nm
NMEDIT = 
OBJDUMP = objdump
OGG_CFLAGS = 
OGG_LIBS = -L${exec_prefix}/lib -logg
OSS_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = libtheora
PKG_CONFIG = /usr/bin/pkg-config
PNG_CFLAGS = 
PNG_LIBS = 
PROFILE = -Wall -Wno-parentheses -pg -g -O3 -fno-inline-functions -DDEBUG
RANLIB = /home/n00b/Programs/emsdk/upstream/emscripten/emranlib
RC = @RC@
SDL_CFLAGS = 
SDL_CONFIG = /home/n00b/Programs/emsdk/upstream/emscripten/system/bin/sdl-config
SDL_LIBS = 
SED = /usr/bin/sed
STRIP = strip
THDEC_LIB_AGE = 1
THDEC_LIB_CURRENT = 2
THDEC_LIB_REVISION = 4
THENC_LIB_AGE = 1
THENC_LIB_CURRENT = 2
THENC_LIB_REVISION = 2
THEORADEC_LDFLAGS =  -Wl,--version-script=$(srcdir)/Version_script-dec
THEORAENC_LDFLAGS =  -Wl,--version-script=$(srcdir)/Version_script-enc
THEORA_LDFLAGS =  -Wl,--version-script=$(srcdir)/Version_script
TH_LIB_AGE = 3
TH_LIB_CURRENT = 3
TH_LIB_REVISION = 10
VALGRIND_ENVIRONMENT = 
VERSION = 1.1.1
VORBISENC_LIBS = 
VORBISFILE_LIBS = 
VORBIS_CFLAGS = 
VORBIS_LIBS = 
am__include = include
am__quote = 
install_sh = /home/n00b/Desktop/projects/libtheora-1.1.1/install-sh
lt_ECHO = echo
ltdl_LIBOBJS = @ltdl_LIBOBJS@
ltdl_LTLIBOBJS = @ltdl_LTLIBOBJS@
sys_symbol_underscore = @sys_symbol_underscore@
INCLUDES = -I$(top_srcdir)/include
AM_CFLAGS = $(OGG_CFLAGS) $(CAIRO_CFLAGS)

EXTRA_DIST = \
	cpu.c \
	encoder_disabled.c \
	x86/mmxencfrag.c \
	x86/mmxfdct.c \
	x86/sse2fdct.c \
	x86/x86enc.c \
	x86/x86enc.h \
	x86/mmxfrag.c \
	x86/mmxfrag.h \
	x86/mmxidct.c \
	x86/mmxloop.h \
	x86/mmxstate.c \
	x86/x86int.h \
	x86/x86state.c \
	x86_vc


lib_LTLIBRARIES = libtheoradec.la libtheoraenc.la libtheora.la

#encoder_uniq_sources = \
#	encoder_disabled.c

encoder_uniq_sources = \
	analyze.c \
	fdct.c \
	encfrag.c \
	encapiwrapper.c \
	encinfo.c \
	encode.c \
	enquant.c \
	huffenc.c \
	mathops.c \
	mcenc.c \
	rate.c \
	tokenize.c \
	$(encoder_uniq_arch_sources)


#encoder_sources = \
#	$(encoder_uniq_sources)

encoder_sources = \
	apiwrapper.c \
	fragment.c \
	idct.c \
	internal.c \
	state.c \
	quant.c \
	$(encoder_shared_arch_sources) \
	$(encoder_uniq_sources)

encoder_uniq_x86_sources = \
	x86/mmxencfrag.c \
	x86/mmxfdct.c \
	x86/x86enc.c


encoder_uniq_x86_64_sources = \
	x86/sse2fdct.c


encoder_shared_x86_sources = \
	x86/mmxfrag.c \
	x86/mmxidct.c \
	x86/mmxstate.c \
	x86/x86state.c


encoder_shared_x86_64_sources = 

encoder_uniq_arch_sources = 
#encoder_uniq_arch_sources = $(encoder_uniq_x86_sources)
#encoder_uniq_arch_sources = \
# $(encoder_uniq_x86_sources) \
# $(encoder_uniq_x86_64_sources)

encoder_shared_arch_sources = 
#encoder_shared_arch_sources = $(encoder_shared_x86_sources)
#encoder_shared_arch_sources = \
# $(encoder_shared_x86_sources) \
# $(encoder_shared_x86_64_sources)


decoder_x86_sources = \
	x86/mmxidct.c \
	x86/mmxfrag.c \
	x86/mmxstate.c \
	x86/x86state.c

decoder_arch_sources = 
#decoder_arch_sources = $(decoder_x86_sources)
#decoder_arch_sources = $(decoder_x86_sources)

decoder_sources = \
	apiwrapper.c \
	bitpack.c \
	decapiwrapper.c \
	decinfo.c \
	decode.c \
	dequant.c \
	fragment.c \
	huffdec.c \
	idct.c \
	info.c \
	internal.c \
	quant.c \
	state.c \
	$(decoder_arch_sources)


noinst_HEADERS = \
	cpu.h \
	internal.h \
	encint.h \
	enquant.h \
	huffenc.h \
	mathops.h \
	modedec.h \
	x86/x86enc.h \
	apiwrapper.h \
	bitpack.h \
	dct.h \
	decint.h \
	dequant.h \
	huffdec.h \
	huffman.h \
	ocintrin.h \
	quant.h \
	x86/mmxfrag.h \
	x86/mmxloop.h \
	x86/x86int.h


libtheoradec_la_SOURCES = \
	$(decoder_sources) \
	Version_script-dec theoradec.exp

libtheoradec_la_LDFLAGS = \
  -version-info 2:4:1 \
   -Wl,--version-script=$(srcdir)/Version_script-dec 


libtheoraenc_la_SOURCES = \
	$(encoder_sources) \
	Version_script-enc theoraenc.exp

libtheoraenc_la_LDFLAGS = \
  -version-info 2:2:1 \
   -Wl,--version-script=$(srcdir)/Version_script-enc $(OGG_LIBS)


libtheora_la_SOURCES = \
	$(decoder_sources) \
	$(encoder_uniq_sources) \
	Version_script theora.exp

libtheora_la_LDFLAGS = \
  -version-info 3:10:3 \
   -Wl,--version-script=$(srcdir)/Version_script  $(OGG_LIBS)

subdir = lib
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libtheora_la_LIBADD =
am__objects_1 = mmxidct.lo mmxfrag.lo mmxstate.lo x86state.lo
am__objects_2 =
#am__objects_2 = $(am__objects_1)
#am__objects_2 = $(am__objects_1)
am__objects_3 = apiwrapper.lo bitpack.lo decapiwrapper.lo decinfo.lo \
	decode.lo dequant.lo fragment.lo huffdec.lo idct.lo info.lo \
	internal.lo quant.lo state.lo $(am__objects_2)
am__objects_4 = mmxencfrag.lo mmxfdct.lo \
	x86enc.lo
am__objects_5 = sse2fdct.lo
am__objects_6 =
#am__objects_6 = \
#	$(am__objects_4)
#am__objects_6 = \
#	$(am__objects_4) \
#	$(am__objects_5)
#am__objects_7 = encoder_disabled.lo
am__objects_7 = analyze.lo fdct.lo \
	encfrag.lo encapiwrapper.lo \
	encinfo.lo encode.lo enquant.lo \
	huffenc.lo mathops.lo mcenc.lo \
	rate.lo tokenize.lo \
	$(am__objects_6)
am_libtheora_la_OBJECTS = $(am__objects_3) $(am__objects_7)
libtheora_la_OBJECTS = $(am_libtheora_la_OBJECTS)
libtheoradec_la_LIBADD =
am_libtheoradec_la_OBJECTS = $(am__objects_3)
libtheoradec_la_OBJECTS = $(am_libtheoradec_la_OBJECTS)
libtheoraenc_la_LIBADD =
am__objects_8 = mmxfrag.lo mmxidct.lo \
	mmxstate.lo x86state.lo
am__objects_9 =
am__objects_10 =
#am__objects_10 = \
#	$(am__objects_8)
#am__objects_10 = \
#	$(am__objects_8) \
#	$(am__objects_9)
#am__objects_11 = $(am__objects_7)
am__objects_11 = apiwrapper.lo fragment.lo \
	idct.lo internal.lo state.lo \
	quant.lo $(am__objects_10) \
	$(am__objects_7)
am_libtheoraenc_la_OBJECTS = $(am__objects_11)
libtheoraenc_la_OBJECTS = $(am_libtheoraenc_la_OBJECTS)

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = 
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/analyze.Plo \
	./$(DEPDIR)/apiwrapper.Plo ./$(DEPDIR)/bitpack.Plo \
	./$(DEPDIR)/decapiwrapper.Plo \
	./$(DEPDIR)/decinfo.Plo ./$(DEPDIR)/decode.Plo \
	./$(DEPDIR)/dequant.Plo \
	./$(DEPDIR)/encapiwrapper.Plo \
	./$(DEPDIR)/encfrag.Plo ./$(DEPDIR)/encinfo.Plo \
	./$(DEPDIR)/encode.Plo \
	./$(DEPDIR)/encoder_disabled.Plo \
	./$(DEPDIR)/enquant.Plo ./$(DEPDIR)/fdct.Plo \
	./$(DEPDIR)/fragment.Plo ./$(DEPDIR)/huffdec.Plo \
	./$(DEPDIR)/huffenc.Plo ./$(DEPDIR)/idct.Plo \
	./$(DEPDIR)/info.Plo ./$(DEPDIR)/internal.Plo \
	./$(DEPDIR)/mathops.Plo ./$(DEPDIR)/mcenc.Plo \
	./$(DEPDIR)/mmxencfrag.Plo ./$(DEPDIR)/mmxfdct.Plo \
	./$(DEPDIR)/mmxfrag.Plo ./$(DEPDIR)/mmxidct.Plo \
	./$(DEPDIR)/mmxstate.Plo ./$(DEPDIR)/quant.Plo \
	./$(DEPDIR)/rate.Plo ./$(DEPDIR)/sse2fdct.Plo \
	./$(DEPDIR)/state.Plo ./$(DEPDIR)/tokenize.Plo \
	./$(DEPDIR)/x86enc.Plo ./$(DEPDIR)/x86state.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -Wall -Wno-parentheses -O3 -fforce-addr -fomit-frame-pointer -finline-functions -funroll-loops 
DIST_SOURCES = $(libtheora_la_SOURCES) $(libtheoradec_la_SOURCES) \
	$(libtheoraenc_la_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(libtheora_la_SOURCES) $(libtheoradec_la_SOURCES) $(libtheoraenc_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .def .exp .lo .o .obj
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  lib/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
mmxidct.lo: x86/mmxidct.c
mmxfrag.lo: x86/mmxfrag.c
mmxstate.lo: x86/mmxstate.c
x86state.lo: x86/x86state.c
mmxencfrag.lo: x86/mmxencfrag.c
mmxfdct.lo: x86/mmxfdct.c
x86enc.lo: x86/x86enc.c
sse2fdct.lo: x86/sse2fdct.c
libtheora.la: $(libtheora_la_OBJECTS) $(libtheora_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libtheora_la_LDFLAGS) $(libtheora_la_OBJECTS) $(libtheora_la_LIBADD) $(LIBS)
libtheoradec.la: $(libtheoradec_la_OBJECTS) $(libtheoradec_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libtheoradec_la_LDFLAGS) $(libtheoradec_la_OBJECTS) $(libtheoradec_la_LIBADD) $(LIBS)
libtheoraenc.la: $(libtheoraenc_la_OBJECTS) $(libtheoraenc_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libtheoraenc_la_LDFLAGS) $(libtheoraenc_la_OBJECTS) $(libtheoraenc_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/analyze.Plo
include ./$(DEPDIR)/apiwrapper.Plo
include ./$(DEPDIR)/bitpack.Plo
include ./$(DEPDIR)/decapiwrapper.Plo
include ./$(DEPDIR)/decinfo.Plo
include ./$(DEPDIR)/decode.Plo
include ./$(DEPDIR)/dequant.Plo
include ./$(DEPDIR)/encapiwrapper.Plo
include ./$(DEPDIR)/encfrag.Plo
include ./$(DEPDIR)/encinfo.Plo
include ./$(DEPDIR)/encode.Plo
include ./$(DEPDIR)/encoder_disabled.Plo
include ./$(DEPDIR)/enquant.Plo
include ./$(DEPDIR)/fdct.Plo
include ./$(DEPDIR)/fragment.Plo
include ./$(DEPDIR)/huffdec.Plo
include ./$(DEPDIR)/huffenc.Plo
include ./$(DEPDIR)/idct.Plo
include ./$(DEPDIR)/info.Plo
include ./$(DEPDIR)/internal.Plo
include ./$(DEPDIR)/mathops.Plo
include ./$(DEPDIR)/mcenc.Plo
include ./$(DEPDIR)/mmxencfrag.Plo
include ./$(DEPDIR)/mmxfdct.Plo
include ./$(DEPDIR)/mmxfrag.Plo
include ./$(DEPDIR)/mmxidct.Plo
include ./$(DEPDIR)/mmxstate.Plo
include ./$(DEPDIR)/quant.Plo
include ./$(DEPDIR)/rate.Plo
include ./$(DEPDIR)/sse2fdct.Plo
include ./$(DEPDIR)/state.Plo
include ./$(DEPDIR)/tokenize.Plo
include ./$(DEPDIR)/x86enc.Plo
include ./$(DEPDIR)/x86state.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mmxidct.o: x86/mmxidct.c
	source='x86/mmxidct.c' object='mmxidct.o' libtool=no \
	depfile='$(DEPDIR)/mmxidct.Po' tmpdepfile='$(DEPDIR)/mmxidct.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxidct.o `test -f 'x86/mmxidct.c' || echo '$(srcdir)/'`x86/mmxidct.c

mmxidct.obj: x86/mmxidct.c
	source='x86/mmxidct.c' object='mmxidct.obj' libtool=no \
	depfile='$(DEPDIR)/mmxidct.Po' tmpdepfile='$(DEPDIR)/mmxidct.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxidct.obj `cygpath -w x86/mmxidct.c`

mmxidct.lo: x86/mmxidct.c
	source='x86/mmxidct.c' object='mmxidct.lo' libtool=yes \
	depfile='$(DEPDIR)/mmxidct.Plo' tmpdepfile='$(DEPDIR)/mmxidct.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxidct.lo `test -f 'x86/mmxidct.c' || echo '$(srcdir)/'`x86/mmxidct.c

mmxfrag.o: x86/mmxfrag.c
	source='x86/mmxfrag.c' object='mmxfrag.o' libtool=no \
	depfile='$(DEPDIR)/mmxfrag.Po' tmpdepfile='$(DEPDIR)/mmxfrag.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxfrag.o `test -f 'x86/mmxfrag.c' || echo '$(srcdir)/'`x86/mmxfrag.c

mmxfrag.obj: x86/mmxfrag.c
	source='x86/mmxfrag.c' object='mmxfrag.obj' libtool=no \
	depfile='$(DEPDIR)/mmxfrag.Po' tmpdepfile='$(DEPDIR)/mmxfrag.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxfrag.obj `cygpath -w x86/mmxfrag.c`

mmxfrag.lo: x86/mmxfrag.c
	source='x86/mmxfrag.c' object='mmxfrag.lo' libtool=yes \
	depfile='$(DEPDIR)/mmxfrag.Plo' tmpdepfile='$(DEPDIR)/mmxfrag.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxfrag.lo `test -f 'x86/mmxfrag.c' || echo '$(srcdir)/'`x86/mmxfrag.c

mmxstate.o: x86/mmxstate.c
	source='x86/mmxstate.c' object='mmxstate.o' libtool=no \
	depfile='$(DEPDIR)/mmxstate.Po' tmpdepfile='$(DEPDIR)/mmxstate.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxstate.o `test -f 'x86/mmxstate.c' || echo '$(srcdir)/'`x86/mmxstate.c

mmxstate.obj: x86/mmxstate.c
	source='x86/mmxstate.c' object='mmxstate.obj' libtool=no \
	depfile='$(DEPDIR)/mmxstate.Po' tmpdepfile='$(DEPDIR)/mmxstate.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxstate.obj `cygpath -w x86/mmxstate.c`

mmxstate.lo: x86/mmxstate.c
	source='x86/mmxstate.c' object='mmxstate.lo' libtool=yes \
	depfile='$(DEPDIR)/mmxstate.Plo' tmpdepfile='$(DEPDIR)/mmxstate.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxstate.lo `test -f 'x86/mmxstate.c' || echo '$(srcdir)/'`x86/mmxstate.c

x86state.o: x86/x86state.c
	source='x86/x86state.c' object='x86state.o' libtool=no \
	depfile='$(DEPDIR)/x86state.Po' tmpdepfile='$(DEPDIR)/x86state.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x86state.o `test -f 'x86/x86state.c' || echo '$(srcdir)/'`x86/x86state.c

x86state.obj: x86/x86state.c
	source='x86/x86state.c' object='x86state.obj' libtool=no \
	depfile='$(DEPDIR)/x86state.Po' tmpdepfile='$(DEPDIR)/x86state.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x86state.obj `cygpath -w x86/x86state.c`

x86state.lo: x86/x86state.c
	source='x86/x86state.c' object='x86state.lo' libtool=yes \
	depfile='$(DEPDIR)/x86state.Plo' tmpdepfile='$(DEPDIR)/x86state.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x86state.lo `test -f 'x86/x86state.c' || echo '$(srcdir)/'`x86/x86state.c

mmxencfrag.o: x86/mmxencfrag.c
	source='x86/mmxencfrag.c' object='mmxencfrag.o' libtool=no \
	depfile='$(DEPDIR)/mmxencfrag.Po' tmpdepfile='$(DEPDIR)/mmxencfrag.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxencfrag.o `test -f 'x86/mmxencfrag.c' || echo '$(srcdir)/'`x86/mmxencfrag.c

mmxencfrag.obj: x86/mmxencfrag.c
	source='x86/mmxencfrag.c' object='mmxencfrag.obj' libtool=no \
	depfile='$(DEPDIR)/mmxencfrag.Po' tmpdepfile='$(DEPDIR)/mmxencfrag.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxencfrag.obj `cygpath -w x86/mmxencfrag.c`

mmxencfrag.lo: x86/mmxencfrag.c
	source='x86/mmxencfrag.c' object='mmxencfrag.lo' libtool=yes \
	depfile='$(DEPDIR)/mmxencfrag.Plo' tmpdepfile='$(DEPDIR)/mmxencfrag.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxencfrag.lo `test -f 'x86/mmxencfrag.c' || echo '$(srcdir)/'`x86/mmxencfrag.c

mmxfdct.o: x86/mmxfdct.c
	source='x86/mmxfdct.c' object='mmxfdct.o' libtool=no \
	depfile='$(DEPDIR)/mmxfdct.Po' tmpdepfile='$(DEPDIR)/mmxfdct.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxfdct.o `test -f 'x86/mmxfdct.c' || echo '$(srcdir)/'`x86/mmxfdct.c

mmxfdct.obj: x86/mmxfdct.c
	source='x86/mmxfdct.c' object='mmxfdct.obj' libtool=no \
	depfile='$(DEPDIR)/mmxfdct.Po' tmpdepfile='$(DEPDIR)/mmxfdct.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxfdct.obj `cygpath -w x86/mmxfdct.c`

mmxfdct.lo: x86/mmxfdct.c
	source='x86/mmxfdct.c' object='mmxfdct.lo' libtool=yes \
	depfile='$(DEPDIR)/mmxfdct.Plo' tmpdepfile='$(DEPDIR)/mmxfdct.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmxfdct.lo `test -f 'x86/mmxfdct.c' || echo '$(srcdir)/'`x86/mmxfdct.c

x86enc.o: x86/x86enc.c
	source='x86/x86enc.c' object='x86enc.o' libtool=no \
	depfile='$(DEPDIR)/x86enc.Po' tmpdepfile='$(DEPDIR)/x86enc.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x86enc.o `test -f 'x86/x86enc.c' || echo '$(srcdir)/'`x86/x86enc.c

x86enc.obj: x86/x86enc.c
	source='x86/x86enc.c' object='x86enc.obj' libtool=no \
	depfile='$(DEPDIR)/x86enc.Po' tmpdepfile='$(DEPDIR)/x86enc.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x86enc.obj `cygpath -w x86/x86enc.c`

x86enc.lo: x86/x86enc.c
	source='x86/x86enc.c' object='x86enc.lo' libtool=yes \
	depfile='$(DEPDIR)/x86enc.Plo' tmpdepfile='$(DEPDIR)/x86enc.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x86enc.lo `test -f 'x86/x86enc.c' || echo '$(srcdir)/'`x86/x86enc.c

sse2fdct.o: x86/sse2fdct.c
	source='x86/sse2fdct.c' object='sse2fdct.o' libtool=no \
	depfile='$(DEPDIR)/sse2fdct.Po' tmpdepfile='$(DEPDIR)/sse2fdct.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sse2fdct.o `test -f 'x86/sse2fdct.c' || echo '$(srcdir)/'`x86/sse2fdct.c

sse2fdct.obj: x86/sse2fdct.c
	source='x86/sse2fdct.c' object='sse2fdct.obj' libtool=no \
	depfile='$(DEPDIR)/sse2fdct.Po' tmpdepfile='$(DEPDIR)/sse2fdct.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sse2fdct.obj `cygpath -w x86/sse2fdct.c`

sse2fdct.lo: x86/sse2fdct.c
	source='x86/sse2fdct.c' object='sse2fdct.lo' libtool=yes \
	depfile='$(DEPDIR)/sse2fdct.Plo' tmpdepfile='$(DEPDIR)/sse2fdct.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sse2fdct.lo `test -f 'x86/sse2fdct.c' || echo '$(srcdir)/'`x86/sse2fdct.c
CCDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/x86
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-info-am uninstall-libLTLIBRARIES


debug:
	$(MAKE) all CFLAGS="-g -Wall -Wno-parentheses -DDEBUG -D__NO_MATH_INLINES" 

profile:
	$(MAKE) all CFLAGS="-Wall -Wno-parentheses -pg -g -O3 -fno-inline-functions -DDEBUG"

# contstruct various symbol export list files
.def.exp : defexp.awk
	awk -f defexp.awk $< > $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
